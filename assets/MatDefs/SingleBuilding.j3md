MaterialDef Simple {
    MaterialParameters {
        Color BaseColor
        Color LitColor
        Texture2D DimMap
        Texture2D LitMap
    }
    Technique {
        WorldParameters {
            WorldViewProjectionMatrix
        }
        VertexShaderNodes {
            ShaderNode CommonVert {
                Definition : CommonVert : Common/MatDefs/ShaderNodes/Common/CommonVert.j3sn
                InputMappings {
                    worldViewProjectionMatrix = WorldParam.WorldViewProjectionMatrix
                    modelPosition = Global.position.xyz
                }
                OutputMappings {
                    Global.position = projPosition
                }
            }
            ShaderNode AttributeToVarying {
                Definition : AttributeToVarying : Common/MatDefs/ShaderNodes/Basic/AttributeToVarying.j3sn
                InputMappings {
                    vec2Variable = Attr.inTexCoord
                }
            }
        }
        FragmentShaderNodes {
            ShaderNode DimFetch {
                Definition : TextureFetch : Common/MatDefs/ShaderNodes/Basic/TextureFetch.j3sn
                InputMappings {
                    textureMap = MatParam.DimMap
                    texCoord = AttributeToVarying.vec2Variable
                }
            }
            ShaderNode LitFetch {
                Definition : TextureFetch : Common/MatDefs/ShaderNodes/Basic/TextureFetch.j3sn
                InputMappings {
                    textureMap = MatParam.LitMap
                    texCoord = AttributeToVarying.vec2Variable
                }
            }
            ShaderNode DimMult {
                Definition : ColorMult : Common/MatDefs/ShaderNodes/Basic/ColorMult.j3sn
                InputMappings {
                    color2 = DimFetch.outColor
                    color1 = MatParam.BaseColor
                }
            }
            ShaderNode LitMult {
                Definition : ColorMult : Common/MatDefs/ShaderNodes/Basic/ColorMult.j3sn
                InputMappings {
                    color1 = LitFetch.outColor
                    color2 = MatParam.LitColor
                }
            }
            ShaderNode MaxAlphaColor {
                Definition : Max Alpha Color : Shaders/MaxAlpha.j3sn
                InputMappings {
                    color01 = LitMult.outColor
                    color02 = DimMult.outColor
                }
                OutputMappings {
                    Global.color = outColor
                }
            }
        }
    }
}